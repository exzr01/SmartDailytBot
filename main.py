import os
import asyncio
from datetime import datetime
from aiogram import Bot, Dispatcher, types
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart, Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from apscheduler.schedulers.asyncio import AsyncIOScheduler

BOT_TOKEN = os.getenv("BOT_TOKEN")
if not BOT_TOKEN:
    raise ValueError("BOT_TOKEN is not set. Please add it to Railway ‚Üí Variables.")

bot = Bot(token=BOT_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher()
scheduler = AsyncIOScheduler()

# –°—Ç–∞–ª–∏–π —Ä–æ–∑–∫–ª–∞–¥
DAILY_PLAN = {
    "07:00": "üèãÔ∏è–¢—Ä–µ–Ω—É–≤–∞–Ω–Ω—è: –ì—Ä—É–¥–∏ + —Ç—Ä–∏—Ü–µ–ø—Å",
    "08:30": "üç≥ –°–Ω—ñ–¥–∞–Ω–æ–∫: –û–º–ª–µ—Ç –∑ –æ–≤–æ—á–∞–º–∏",
    "13:00": "üçó –û–±—ñ–¥: –ö—É—Ä—è—á–µ —Ñ—ñ–ª–µ + –≥—Ä–µ—á–∫–∞",
    "19:00": "ü•ó –í–µ—á–µ—Ä—è: –°–∞–ª–∞—Ç + —Ç—É–Ω–µ—Ü—å",
    "21:00": "üíß –í–æ–¥–∞: –ü—ñ–¥–±–∏–≤–∞–Ω–Ω—è: 2.5 –ª—ñ—Ç—Ä–∞"
}

# –ì–æ–ª–æ–≤–Ω–∞ –∫–Ω–æ–ø–∫–∞
main_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="‚ùì –©–æ —Å—å–æ–≥–æ–¥–Ω—ñ?")],
    ],
    resize_keyboard=True
)

@dp.message(CommandStart())
async def start_handler(message: types.Message):
    await message.answer(
        "üëã –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ ‚úÖ\n–©–æ–¥–µ–Ω–Ω—ñ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω—ñ!",
        reply_markup=main_keyboard
    )

@dp.message()
async def today_schedule(message: types.Message):
    if message.text == "‚ùì –©–æ —Å—å–æ–≥–æ–¥–Ω—ñ?":
        today = datetime.now().strftime("%d.%m.%Y")
        schedule_text = f"üóìÔ∏è <b>–†–æ–∑–∫–ª–∞–¥ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ ({today}):</b>\n\n"
        for time, task in DAILY_PLAN.items():
            schedule_text += f"<b>{time}</b> ‚Äî {task}\n"
        await message.answer(schedule_text)

async def main():
    scheduler.start()
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
